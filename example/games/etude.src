Resident data ends at 5f4, program starts at 5f4, file ends at 407c

Starting analysis pass at address 5f3

End of analysis pass, low address = 5f4, high address = 3524

[Start of code at 5f4]

Main routine 5f4, 0 locals

  5f5:  e0 3f 0c 48 ff          CALL_VS         3120 -> Gef
  5fa:  ba                      QUIT            

Routine 5fc, 2 locals

  5fd:  10 32 00 01             LOADB           #32,#00 -> L00
  601:  10 32 01 02             LOADB           #32,#01 -> L01
  605:  a0 01 00 46             JZ              L00 [FALSE] 64d
  609:  a0 02 00 42             JZ              L01 [FALSE] 64d
  60d:  b2 ...                  PRINT           "Your interpreter does not
claim to follow any particular version of the Z-Spec.

"
  64a:  8c 00 3b                JUMP            686
  64d:  b2 ...                  PRINT           "Your interpreter claims to
follow revision "
  66c:  e6 bf 01                PRINT_NUM       L00
  66f:  b2 ...                  PRINT           "."
  672:  e6 bf 02                PRINT_NUM       L01
  675:  b2 ...                  PRINT           " of the Z-Spec.

"
  686:  10 00 01 01             LOADB           #00,#01 -> L00
  68a:  49 01 01 00             AND             L00,#01 -> -(SP)
  68e:  a0 00 80 2c             JZ              (SP)+ [TRUE] 6bc
  692:  b2 ...                  PRINT           "Interpreter claims that
colored text IS available.
"
  6b9:  8c 00 2d                JUMP            6e7
  6bc:  b2 ...                  PRINT           "Interpreter claims that
colored text IS NOT available.
"
  6e7:  49 01 04 00             AND             L00,#04 -> -(SP)
  6eb:  a0 00 80 34             JZ              (SP)+ [TRUE] 721
  6ef:  b2 ...                  PRINT           "Interpreter claims that
emphasized (bold) text IS available.
"
  71e:  8c 00 35                JUMP            754
  721:  b2 ...                  PRINT           "Interpreter claims that
emphasized (bold) text IS NOT available.
"
  754:  49 01 08 00             AND             L00,#08 -> -(SP)
  758:  a0 00 80 38             JZ              (SP)+ [TRUE] 792
  75c:  b2 ...                  PRINT           "Interpreter claims that italic
(or underlined) text IS available.
"
  78f:  8c 00 39                JUMP            7c9
  792:  b2 ...                  PRINT           "Interpreter claims that italic
(or underlined) text IS NOT available.
"
  7c9:  49 01 10 00             AND             L00,#10 -> -(SP)
  7cd:  a0 00 80 30             JZ              (SP)+ [TRUE] 7ff
  7d1:  b2 ...                  PRINT           "Interpreter claims that
fixed-width text IS available.
"
  7fc:  8c 00 31                JUMP            82e
  7ff:  b2 ...                  PRINT           "Interpreter claims that
fixed-width text IS NOT available.
"
  82e:  49 01 20 00             AND             L00,#20 -> -(SP)
  832:  a0 00 80 2e             JZ              (SP)+ [TRUE] 862
  836:  b2 ...                  PRINT           "Interpreter claims that sound
effects ARE available.
"
  85f:  8c 00 2f                JUMP            88f
  862:  b2 ...                  PRINT           "Interpreter claims that sound
effects ARE NOT available.
"
  88f:  49 01 80 00             AND             L00,#80 -> -(SP)
  893:  a0 00 80 2c             JZ              (SP)+ [TRUE] 8c1
  897:  b2 ...                  PRINT           "Interpreter claims that timed
input IS available.
"
  8be:  8c 00 2d                JUMP            8ec
  8c1:  b2 ...                  PRINT           "Interpreter claims that timed
input IS NOT available.
"
  8ec:  bb                      NEW_LINE        
  8ed:  10 10 01 01             LOADB           #10,#01 -> L00
  8f1:  49 01 10 00             AND             L00,#10 -> -(SP)
  8f5:  a0 00 80 2a             JZ              (SP)+ [TRUE] 921
  8f9:  b2 ...                  PRINT           "Interpreter claims that "undo"
IS available.
"
  91e:  8c 00 2b                JUMP            94a
  921:  b2 ...                  PRINT           "Interpreter claims that "undo"
IS NOT available.
"
  94a:  b0                      RTRUE           

Routine 94c, 4 locals

  94d:  10 00 01 01             LOADB           #00,#01 -> L00
  951:  49 01 01 00             AND             L00,#01 -> -(SP)
  955:  a0 00 80 2f             JZ              (SP)+ [TRUE] 986
  959:  b2 ...                  PRINT           "Interpreter claims that
colored text IS available.
"
  980:  0d 04 01                STORE           L03,#01
  983:  8c 00 30                JUMP            9b4
  986:  b2 ...                  PRINT           "Interpreter claims that
colored text IS NOT available.
"
  9b1:  0d 04 00                STORE           L03,#00
  9b4:  a0 04 80 20             JZ              L03 [TRUE] 9d6
  9b8:  b2 ...                  PRINT           "
In the square below, you should see"
  9d3:  8c 00 25                JUMP            9f9
  9d6:  b2 ...                  PRINT           "
If it was, in the square below, you would see"
  9f9:  b2 ...                  PRINT           " vertical stripes of
background color (matching the column headers) and horizontal rows of
foreground color (that is, all # marks in a row the same color.)
"
  a68:  0f 00 08 ff             LOADW           #00,#08 -> Gef
  a6c:  28 02 ff ff             OR              #02,Gef -> Gef
  a70:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
  a75:  bb                      NEW_LINE        
  a76:  b2 ...                  PRINT           "Bk Rd Gr Yl Bl Mg Cy Wh
"
  a8d:  0d 02 02                STORE           L01,#02
  a90:  42 02 0a 00 2c          JL              L01,#0a [FALSE] abf
  a95:  0d 03 02                STORE           L02,#02
  a98:  42 03 0a 4f             JL              L02,#0a [FALSE] aa9
  a9c:  7b 02 03                SET_COLOUR      L01,L02
  a9f:  b2 ...                  PRINT           "## "
  aa4:  95 03                   INC             L02
  aa6:  8c ff f1                JUMP            a98
  aa9:  1b 01 01                SET_COLOUR      #01,#01
  aac:  b2 ...                  PRINT           ": "
  aaf:  cf 2f 04 c0 02 00       LOADW           #04c0,L01 -> -(SP)
  ab5:  ad 00                   PRINT_PADDR     (SP)+
  ab7:  b2 ...                  PRINT           "
"
  aba:  95 02                   INC             L01
  abc:  8c ff d3                JUMP            a90
  abf:  0f 00 08 ff             LOADW           #00,#08 -> Gef
  ac3:  c9 2f ff fd ff ff       AND             #fffd,Gef -> Gef
  ac9:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
  ace:  b0                      RTRUE           

Routine ad0, 1 local

  ad1:  10 00 01 01             LOADB           #00,#01 -> L00
  ad5:  49 01 04 00             AND             L00,#04 -> -(SP)
  ad9:  a0 00 80 34             JZ              (SP)+ [TRUE] b0f
  add:  b2 ...                  PRINT           "Interpreter claims that
emphasized (bold) text IS available.
"
  b0c:  8c 00 35                JUMP            b42
  b0f:  b2 ...                  PRINT           "Interpreter claims that
emphasized (bold) text IS NOT available.
"
  b42:  49 01 08 00             AND             L00,#08 -> -(SP)
  b46:  a0 00 80 38             JZ              (SP)+ [TRUE] b80
  b4a:  b2 ...                  PRINT           "Interpreter claims that italic
(or underlined) text IS available.
"
  b7d:  8c 00 39                JUMP            bb7
  b80:  b2 ...                  PRINT           "Interpreter claims that italic
(or underlined) text IS NOT available.
"
  bb7:  49 01 10 00             AND             L00,#10 -> -(SP)
  bbb:  a0 00 80 30             JZ              (SP)+ [TRUE] bed
  bbf:  b2 ...                  PRINT           "Interpreter claims that
fixed-width text IS available.
"
  bea:  8c 00 31                JUMP            c1c
  bed:  b2 ...                  PRINT           "Interpreter claims that
fixed-width text IS NOT available.
"
  c1c:  bb                      NEW_LINE        
  c1d:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  c20:  b2 ...                  PRINT           "Test of emphasized (bold)
text."
  c39:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  c3c:  b2 ...                  PRINT           "
...normal font...
"
  c4f:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  c52:  b2 ...                  PRINT           "Test of italic (or underlined)
text."
  c6f:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  c72:  b2 ...                  PRINT           "
...normal font...
"
  c85:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  c88:  b2 ...                  PRINT           "Test of reverse-video text."
  c9d:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  ca0:  b2 ...                  PRINT           "
...normal font...
"
  cb3:  0f 00 08 ff             LOADW           #00,#08 -> Gef
  cb7:  28 02 ff ff             OR              #02,Gef -> Gef
  cbb:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
  cc0:  b2 ...                  PRINT           "Test of fixed-width text
(using "font off", which sets a header bit)."
  cf5:  0f 00 08 ff             LOADW           #00,#08 -> Gef
  cf9:  c9 2f ff fd ff ff       AND             #fffd,Gef -> Gef
  cff:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
  d04:  b2 ...                  PRINT           "
...normal font...
"
  d17:  f1 7f 08                SET_TEXT_STYLE  FIXED_FONT
  d1a:  b2 ...                  PRINT           "Test of fixed-width text
(using "@set_text_style 8")."
  d47:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  d4a:  bb                      NEW_LINE        
  d4b:  b2 ...                  PRINT           "
Now we will try combining styles. The Z-Spec does not require interpreters to
display combined styles, so the lines below may not have all the styles they
say they do.

"
  dc6:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  dc9:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  dcc:  b2 ...                  PRINT           "Test of bold, italic text."
  de1:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  de4:  bb                      NEW_LINE        
  de5:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  de8:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  deb:  b2 ...                  PRINT           "Test of bold, reverse text."
  e00:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  e03:  bb                      NEW_LINE        
  e04:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  e07:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  e0a:  b2 ...                  PRINT           "Test of italic, reverse text."
  e21:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  e24:  bb                      NEW_LINE        
  e25:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  e28:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  e2b:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  e2e:  b2 ...                  PRINT           "Test of bold, italic, reverse
text."
  e49:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  e4c:  bb                      NEW_LINE        
  e4d:  b2 ...                  PRINT           "
The following are all printed with "font off" (that is, the header bit remains
set, even though "style roman" statements occur.)
"
  eae:  0f 00 08 ff             LOADW           #00,#08 -> Gef
  eb2:  28 02 ff ff             OR              #02,Gef -> Gef
  eb6:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
  ebb:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  ebe:  b2 ...                  PRINT           "Test of fixed, bold text."
  ed3:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  ed6:  bb                      NEW_LINE        
  ed7:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  eda:  b2 ...                  PRINT           "Test of fixed, italic text."
  eef:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  ef2:  bb                      NEW_LINE        
  ef3:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  ef6:  b2 ...                  PRINT           "Test of fixed, reverse text."
  f0d:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  f10:  bb                      NEW_LINE        
  f11:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  f14:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  f17:  b2 ...                  PRINT           "Test of fixed, bold, italic
text."
  f32:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  f35:  bb                      NEW_LINE        
  f36:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  f39:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  f3c:  b2 ...                  PRINT           "Test of fixed, bold, reverse
text."
  f57:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  f5a:  bb                      NEW_LINE        
  f5b:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  f5e:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  f61:  b2 ...                  PRINT           "Test of fixed, italic, reverse
text."
  f7e:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  f81:  bb                      NEW_LINE        
  f82:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
  f85:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
  f88:  f1 7f 01                SET_TEXT_STYLE  REVERSE
  f8b:  b2 ...                  PRINT           "Test of fixed, bold, italic,
reverse text."
  fac:  f1 7f 00                SET_TEXT_STYLE  ROMAN
  faf:  bb                      NEW_LINE        
  fb0:  0f 00 08 ff             LOADW           #00,#08 -> Gef
  fb4:  c9 2f ff fd ff ff       AND             #fffd,Gef -> Gef
  fba:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
  fbf:  b2 ...                  PRINT           "
End of styles test.
"
  fd2:  b0                      RTRUE           

Routine fd4, 3 locals

  fd5:  ad 01                   PRINT_PADDR     L00
  fd7:  b2 ...                  PRINT           " = "
  fdc:  e6 bf 02                PRINT_NUM       L01
  fdf:  61 02 03 4c             JE              L01,L02 [FALSE] fed
  fe3:  b2 ...                  PRINT           " (ok)
"
  fea:  8c 00 20                JUMP            100b
  fed:  b2 ...                  PRINT           " (ERROR, should be "
 1000:  e6 bf 03                PRINT_NUM       L02
 1003:  b2 ...                  PRINT           "!)
"
 1008:  0d 10 01                STORE           G00,#01
 100b:  b0                      RTRUE           

Routine 100c, 3 locals

 100d:  b2 ...                  PRINT           "This tests signed
multiplication, division, and modulo operations. All these operations are
supposed to be signed. (The Z-Spec 0.2 erroneously says they are unsigned; this
is corrected in 0.99.)

"
 10a2:  b2 ...                  PRINT           "I am assuming the convention
that division always rounds towards zero (not towards negative infinity), and
(A % B) always has the same sign as A. These conventions seem to be common
among existing C/C++ compilers. The Infocom interpreters also follow these
conventions. (But they are not guaranteed by the C and C++ standards. Those
only require that (A/B)*B + (A%B) == A, for all A and all nonzero B.)

"
 11e1:  0d 10 00                STORE           G00,#00
 11e4:  0d 01 0d                STORE           L00,#0d
 11e7:  0d 02 05                STORE           L01,#05
 11ea:  76 01 02 03             MUL             L00,L01 -> L02
 11ee:  f9 09 03 f5 0d f1 03 41 CALL_VN         fd4 (S013,L02,#41)
 11f6:  0d 01 0d                STORE           L00,#0d
 11f9:  cd 4f 02 ff fb          STORE           L01,#fffb
 11fe:  76 01 02 03             MUL             L00,L01 -> L02
 1202:  f9 08 03 f5 0d f3 03 ff bf 
                               CALL_VN         fd4 (S014,L02,#ffbf)
 120b:  cd 4f 01 ff f3          STORE           L00,#fff3
 1210:  0d 02 05                STORE           L01,#05
 1213:  76 01 02 03             MUL             L00,L01 -> L02
 1217:  f9 08 03 f5 0d f6 03 ff bf 
                               CALL_VN         fd4 (S015,L02,#ffbf)
 1220:  cd 4f 01 ff f3          STORE           L00,#fff3
 1225:  cd 4f 02 ff fb          STORE           L01,#fffb
 122a:  76 01 02 03             MUL             L00,L01 -> L02
 122e:  f9 09 03 f5 0d f9 03 41 CALL_VN         fd4 (S016,L02,#41)
 1236:  0d 01 0d                STORE           L00,#0d
 1239:  0d 02 05                STORE           L01,#05
 123c:  77 01 02 03             DIV             L00,L01 -> L02
 1240:  f9 09 03 f5 0d fc 03 02 CALL_VN         fd4 (S017,L02,#02)
 1248:  0d 01 0d                STORE           L00,#0d
 124b:  cd 4f 02 ff fb          STORE           L01,#fffb
 1250:  77 01 02 03             DIV             L00,L01 -> L02
 1254:  f9 08 03 f5 0d fe 03 ff fe 
                               CALL_VN         fd4 (S018,L02,#fffe)
 125d:  cd 4f 01 ff f3          STORE           L00,#fff3
 1262:  0d 02 05                STORE           L01,#05
 1265:  77 01 02 03             DIV             L00,L01 -> L02
 1269:  f9 08 03 f5 0e 00 03 ff fe 
                               CALL_VN         fd4 (S019,L02,#fffe)
 1272:  cd 4f 01 ff f3          STORE           L00,#fff3
 1277:  cd 4f 02 ff fb          STORE           L01,#fffb
 127c:  77 01 02 03             DIV             L00,L01 -> L02
 1280:  f9 09 03 f5 0e 02 03 02 CALL_VN         fd4 (S020,L02,#02)
 1288:  0d 01 0d                STORE           L00,#0d
 128b:  0d 02 05                STORE           L01,#05
 128e:  78 01 02 03             MOD             L00,L01 -> L02
 1292:  f9 09 03 f5 0e 05 03 03 CALL_VN         fd4 (S021,L02,#03)
 129a:  0d 01 0d                STORE           L00,#0d
 129d:  cd 4f 02 ff fb          STORE           L01,#fffb
 12a2:  78 01 02 03             MOD             L00,L01 -> L02
 12a6:  f9 09 03 f5 0e 07 03 03 CALL_VN         fd4 (S022,L02,#03)
 12ae:  cd 4f 01 ff f3          STORE           L00,#fff3
 12b3:  0d 02 05                STORE           L01,#05
 12b6:  78 01 02 03             MOD             L00,L01 -> L02
 12ba:  f9 08 03 f5 0e 0a 03 ff fd 
                               CALL_VN         fd4 (S023,L02,#fffd)
 12c3:  cd 4f 01 ff f3          STORE           L00,#fff3
 12c8:  cd 4f 02 ff fb          STORE           L01,#fffb
 12cd:  78 01 02 03             MOD             L00,L01 -> L02
 12d1:  f9 08 03 f5 0e 0d 03 ff fd 
                               CALL_VN         fd4 (S024,L02,#fffd)
 12da:  a0 10 4b                JZ              G00 [FALSE] 12e6
 12dd:  b2 ...                  PRINT           "
"
 12e0:  8d 0d ce                PRINT_PADDR     S001
 12e3:  8c 00 08                JUMP            12ec
 12e6:  b2 ...                  PRINT           "
"
 12e9:  8d 0d da                PRINT_PADDR     S002
 12ec:  b0                      RTRUE           

Routine 12f0, 2 locals

 12f1:  b2 ...                  PRINT           "This displays all the accented
characters (encoding values 155 to 223). You will have to inspect your
interpreter's display to make sure they appear correctly.

"
 1368:  b2 ...                  PRINT           "For the record, an umlaut is
two dots; an acute accent is the one that slants up to the right; a grave
accent is the one that slants down to the right; a circumflex is a pointy hat;
a tilde is a squiggly hat; a ring is a ring; a cedilla is the little hook that
hangs down below the C. Thorn looks like a capital D whose vertical bar extends
both up and down, and Eth looks like a D with a little cross-stroke.

"
 1491:  b2 ...                  PRINT           "NOTE: Inform 6.11 contradicts
the Z-Spec 0.99 document, on the subject of the European angle-quotes (the ones
that look like '>>' and '<<'). The Z-Spec says that the character '>>' is code
162, and '<<' is 163. However, Inform 6.11 (following the Z-Spec 0.2) compiles
'@>>' as 163, and '@<<' as 162. The concensus is that the Z-Spec 0.2 and Inform
6.11 are wrong, and Z-Spec 0.99 and later are correct.

"
 15fa:  0d 02 00                STORE           L01,#00
 15fd:  90 01 81 5e             JZ              #01 [TRUE] 175d
 1601:  42 02 00 80 74          JL              L01,#00 [TRUE] 1678
 1606:  49 02 04 00             AND             L01,#04 -> -(SP)
 160a:  a0 00 cf                JZ              (SP)+ [TRUE] 161a
 160d:  0f 00 08 ff             LOADW           #00,#08 -> Gef
 1611:  28 02 ff ff             OR              #02,Gef -> Gef
 1615:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
 161a:  49 02 02 00             AND             L01,#02 -> -(SP)
 161e:  a0 00 c5                JZ              (SP)+ [TRUE] 1624
 1621:  f1 7f 04                SET_TEXT_STYLE  EMPHASIS
 1624:  49 02 01 00             AND             L01,#01 -> -(SP)
 1628:  a0 00 c5                JZ              (SP)+ [TRUE] 162e
 162b:  f1 7f 02                SET_TEXT_STYLE  BOLDFACE
 162e:  0d 01 01                STORE           L00,#01
 1631:  cf 1f 04 d4 00 00       LOADW           #04d4,#00 -> -(SP)
 1637:  63 01 00 dd             JG              L00,(SP)+ [TRUE] 1656
 163b:  cf 2f 04 d4 01 00       LOADW           #04d4,L00 -> -(SP)
 1641:  ad 00                   PRINT_PADDR     (SP)+
 1643:  58 01 04 00             MOD             L00,#04 -> -(SP)
 1647:  a0 00 46                JZ              (SP)+ [FALSE] 164e
 164a:  bb                      NEW_LINE        
 164b:  8c 00 05                JUMP            1651
 164e:  b2 ...                  PRINT           "   "
 1651:  95 01                   INC             L00
 1653:  8c ff dd                JUMP            1631
 1656:  49 02 04 00             AND             L01,#04 -> -(SP)
 165a:  a0 00 d1                JZ              (SP)+ [TRUE] 166c
 165d:  0f 00 08 ff             LOADW           #00,#08 -> Gef
 1661:  c9 2f ff fd ff ff       AND             #fffd,Gef -> Gef
 1667:  e1 5b 00 08 ff          STOREW          #00,#08,Gef
 166c:  49 02 03 00             AND             L01,#03 -> -(SP)
 1670:  a0 00 c5                JZ              (SP)+ [TRUE] 1676
 1673:  f1 7f 00                SET_TEXT_STYLE  ROMAN
 1676:  bb                      NEW_LINE        
 1677:  bb                      NEW_LINE        
 1678:  b2 ...                  PRINT           "Type a digit (0..7) to repeat
this list in a different text style, or "." to end this test.
"
 16bf:  b2 ...                  PRINT           "Options: 0: normal; 1: bold;
2: italic; 3: bold italic; 4: fixed-width; 5: fixed bold; 6: fixed italic; 7:
fixed bold italic.
"
 1730:  b2 ...                  PRINT           "
Accents> "
 173b:  f6 7f 01 01             READ_CHAR       #01 -> L00
 173f:  bb                      NEW_LINE        
 1740:  41 01 2e 43             JE              L00,#2e [FALSE] 1745
 1744:  b0                      RTRUE           
 1745:  bb                      NEW_LINE        
 1746:  42 01 30 cd             JL              L00,#30 [TRUE] 1755
 174a:  43 01 37 c9             JG              L00,#37 [TRUE] 1755
 174e:  55 01 30 02             SUB             L00,#30 -> L01
 1752:  8c 00 07                JUMP            175a
 1755:  cd 4f 02 ff ff          STORE           L01,#ffff
 175a:  8c fe a2                JUMP            15fd
 175d:  b0                      RTRUE           

Routine 1760, 3 locals

 1761:  0d 03 00                STORE           L02,#00
 1764:  41 01 08 00 2f          JE              L00,#08 [FALSE] 1796
 1769:  b2 ...                  PRINT           "control character 'ctrl-H'
(z-machine 'delete')"
 1790:  0d 03 02                STORE           L02,#02
 1793:  8c 02 1f                JUMP            19b3
 1796:  41 01 0d 00 2f          JE              L00,#0d [FALSE] 17c8
 179b:  b2 ...                  PRINT           "control character 'ctrl-M'
(z-machine 'newline')"
 17c2:  0d 03 02                STORE           L02,#02
 17c5:  8c 01 ed                JUMP            19b3
 17c8:  41 01 1b 00 31          JE              L00,#1b [FALSE] 17fc
 17cd:  b2 ...                  PRINT           "control character 'ctrl-['
(z-machine 'escape')"
 17f6:  0d 03 02                STORE           L02,#02
 17f9:  8c 01 b9                JUMP            19b3
 17fc:  42 01 20 00 27          JL              L00,#20 [FALSE] 1826
 1801:  b2 ...                  PRINT           "control character 'ctrl-"
 1814:  54 01 40 00             ADD             L00,#40 -> -(SP)
 1818:  e5 bf 00                PRINT_CHAR      (SP)+
 181b:  b2 ...                  PRINT           "'"
 181e:  cd 4f 03 ff ff          STORE           L02,#ffff
 1823:  8c 01 8f                JUMP            19b3
 1826:  41 01 7f 5f             JE              L00,#7f [FALSE] 1847
 182a:  b2 ...                  PRINT           "control character 'delete'"
 183f:  cd 4f 03 ff ff          STORE           L02,#ffff
 1844:  8c 01 6e                JUMP            19b3
 1847:  41 01 80 59             JE              L00,#80 [FALSE] 1862
 184b:  b2 ...                  PRINT           "undefined character"
 185a:  cd 4f 03 ff ff          STORE           L02,#ffff
 185f:  8c 01 53                JUMP            19b3
 1862:  42 01 80 5c             JL              L00,#80 [FALSE] 1880
 1866:  b2 ...                  PRINT           "ASCII character '"
 1877:  e5 bf 01                PRINT_CHAR      L00
 187a:  b2 ...                  PRINT           "'"
 187d:  8c 01 35                JUMP            19b3
 1880:  42 01 9b 00 a3          JL              L00,#9b [FALSE] 1926
 1885:  0d 03 02                STORE           L02,#02
 1888:  2d ff 01                STORE           Gef,L00
 188b:  41 ff 81 4c             JE              Gef,#81 [FALSE] 1899
 188f:  b2 ...                  PRINT           "cursor up"
 1896:  8c 00 8c                JUMP            1923
 1899:  41 ff 82 4e             JE              Gef,#82 [FALSE] 18a9
 189d:  b2 ...                  PRINT           "cursor down"
 18a6:  8c 00 7c                JUMP            1923
 18a9:  41 ff 83 4e             JE              Gef,#83 [FALSE] 18b9
 18ad:  b2 ...                  PRINT           "cursor left"
 18b6:  8c 00 6c                JUMP            1923
 18b9:  41 ff 84 4e             JE              Gef,#84 [FALSE] 18c9
 18bd:  b2 ...                  PRINT           "cursor right"
 18c6:  8c 00 5c                JUMP            1923
 18c9:  c1 95 ff 85 86 87 d7    JE              Gef,#85,#86,#87 [TRUE] 18e5
 18d0:  c1 95 ff 88 89 8a d0    JE              Gef,#88,#89,#8a [TRUE] 18e5
 18d7:  c1 95 ff 8b 8c 8d c9    JE              Gef,#8b,#8c,#8d [TRUE] 18e5
 18de:  c1 95 ff 8e 8f 90 57    JE              Gef,#8e,#8f,#90 [FALSE] 18fa
 18e5:  b2 ...                  PRINT           "function key "
 18f0:  55 01 84 00             SUB             L00,#84 -> -(SP)
 18f4:  e6 bf 00                PRINT_NUM       (SP)+
 18f7:  8c 00 2b                JUMP            1923
 18fa:  c1 95 ff 91 92 93 d4    JE              Gef,#91,#92,#93 [TRUE] 1913
 1901:  c1 95 ff 94 95 96 cd    JE              Gef,#94,#95,#96 [TRUE] 1913
 1908:  c1 95 ff 97 98 99 c6    JE              Gef,#97,#98,#99 [TRUE] 1913
 190f:  41 ff 9a 52             JE              Gef,#9a [FALSE] 1923
 1913:  b2 ...                  PRINT           "keypad key "
 191c:  55 01 91 00             SUB             L00,#91 -> -(SP)
 1920:  e6 bf 00                PRINT_NUM       (SP)+
 1923:  8c 00 8f                JUMP            19b3
 1926:  42 01 e0 55             JL              L00,#e0 [FALSE] 193d
 192a:  55 01 9b 00             SUB             L00,#9b -> -(SP)
 192e:  54 00 01 00             ADD             (SP)+,#01 -> -(SP)
 1932:  cf 2f 04 d4 00 00       LOADW           #04d4,(SP)+ -> -(SP)
 1938:  ad 00                   PRINT_PADDR     (SP)+
 193a:  8c 00 78                JUMP            19b3
 193d:  42 01 fc 59             JL              L00,#fc [FALSE] 1958
 1941:  b2 ...                  PRINT           "undefined character"
 1950:  cd 4f 03 ff ff          STORE           L02,#ffff
 1955:  8c 00 5d                JUMP            19b3
 1958:  42 01 ff 00 44          JL              L00,#ff [FALSE] 199f
 195d:  0d 03 02                STORE           L02,#02
 1960:  2d ff 01                STORE           Gef,L00
 1963:  41 ff fc 4e             JE              Gef,#fc [FALSE] 1973
 1967:  b2 ...                  PRINT           "menu click"
 1970:  8c 00 2b                JUMP            199c
 1973:  41 ff fd 54             JE              Gef,#fd [FALSE] 1989
 1977:  b2 ...                  PRINT           "mouse double-click"
 1986:  8c 00 15                JUMP            199c
 1989:  41 ff fe 51             JE              Gef,#fe [FALSE] 199c
 198d:  b2 ...                  PRINT           "mouse single-click"
 199c:  8c 00 16                JUMP            19b3
 199f:  cd 4f 03 ff ff          STORE           L02,#ffff
 19a4:  b2 ...                  PRINT           "undefined character"
 19b3:  41 02 01 00 46          JE              L01,#01 [FALSE] 19fc
 19b8:  2d ff 03                STORE           Gef,L02
 19bb:  c1 8f ff ff ff 56       JE              Gef,#ffff [FALSE] 19d5
 19c1:  b2 ...                  PRINT           " (should NOT occur)"
 19d2:  8c 00 26                JUMP            19f9
 19d5:  41 ff 02 00 21          JE              Gef,#02 [FALSE] 19f9
 19da:  b2 ...                  PRINT           " (should NOT occur in
full-line input)"
 19f9:  8c 00 20                JUMP            1a1a
 19fc:  41 02 02 5c             JE              L01,#02 [FALSE] 1a1a
 1a00:  2d ff 03                STORE           Gef,L02
 1a03:  c1 8f ff ff ff 53       JE              Gef,#ffff [FALSE] 1a1a
 1a09:  b2 ...                  PRINT           " (should NOT occur)"
 1a1a:  b0                      RTRUE           

Routine 1a1c, 4 locals

 1a1d:  b2 ...                  PRINT           "This tests input of accented
(actually, all) characters. Enter a line of text; it will be broken down, and
you will see a list of what characters your interpreter thought you typed.
Remember that the interpreter is supposed to reduce everything to lower-case.

"
 1ad8:  b2 ...                  PRINT           "Hit Enter by itself to return
to the main menu.
"
 1afd:  90 01 80 6a             JZ              #01 [TRUE] 1b69
 1b01:  b2 ...                  PRINT           "
AccentedInput> "
 1b12:  d5 1f 00 50 03 00       SUB             #0050,#03 -> -(SP)
 1b18:  e2 1b 05 9a 00 00       STOREB          #059a,#00,(SP)+
 1b1e:  e2 17 05 9a 01 00       STOREB          #059a,#01,#00
 1b24:  cd 4f 01 05 9a          STORE           L00,#059a
 1b29:  0d 02 00                STORE           L01,#00
 1b2c:  e4 bf 01 02             READ            L00 -> L01
 1b30:  bb                      NEW_LINE        
 1b31:  d0 1f 05 9a 01 04       LOADB           #059a,#01 -> L03
 1b37:  a0 04 43                JZ              L03 [FALSE] 1b3b
 1b3a:  b0                      RTRUE           
 1b3b:  0d 02 00                STORE           L01,#00
 1b3e:  62 02 04 00 25          JL              L01,L03 [FALSE] 1b66
 1b43:  34 02 02 00             ADD             #02,L01 -> -(SP)
 1b47:  d0 2f 05 9a 00 03       LOADB           #059a,(SP)+ -> L02
 1b4d:  b2 ...                  PRINT           "code="
 1b54:  e6 bf 03                PRINT_NUM       L02
 1b57:  b2 ...                  PRINT           ": "
 1b5a:  f9 27 05 d8 03 01       CALL_VN         1760 (L02,#01)
 1b60:  bb                      NEW_LINE        
 1b61:  95 02                   INC             L01
 1b63:  8c ff da                JUMP            1b3e
 1b66:  8c ff 96                JUMP            1afd
 1b69:  b0                      RTRUE           

Routine 1b6c, 1 local

 1b6d:  b2 ...                  PRINT           "This tests input of accented
(actually, all) characters. Type characters; you will see what characters your
interpreter thought you typed. Hit "." to return to the main menu.

"
 1bf0:  90 01 80 44             JZ              #01 [TRUE] 1c36
 1bf4:  b2 ...                  PRINT           "AccentedInput> "
 1c03:  88 0c c3 01             CALL_1S         330c -> L00
 1c07:  41 01 2e 54             JE              L00,#2e [FALSE] 1c1d
 1c0b:  b2 ...                  PRINT           "

Test finished.
"
 1c1c:  b0                      RTRUE           
 1c1d:  b2 ...                  PRINT           "
code="
 1c26:  e6 bf 01                PRINT_NUM       L00
 1c29:  b2 ...                  PRINT           ": "
 1c2c:  f9 27 05 d8 01 02       CALL_VN         1760 (L00,#02)
 1c32:  bb                      NEW_LINE        
 1c33:  8c ff bc                JUMP            1bf0
 1c36:  b0                      RTRUE           

Routine 1c38, 2 locals

 1c39:  10 00 01 02             LOADB           #00,#01 -> L01
 1c3d:  49 02 80 00             AND             L01,#80 -> -(SP)
 1c41:  a0 00 80 45             JZ              (SP)+ [TRUE] 1c88
 1c45:  0d 01 01                STORE           L00,#01
 1c48:  b2 ...                  PRINT           "Your interpreter claims (by
its header bit) that it DOES support timed input.

"
 1c85:  8c 00 46                JUMP            1ccc
 1c88:  0d 01 00                STORE           L00,#00
 1c8b:  b2 ...                  PRINT           "Your interpreter claims (by
its header bit) that it DOES NOT support timed input.

"
 1ccc:  b2 ...                  PRINT           "When you begin this test,
asterisks should appear at the rate of one per second. If they appear at the
rate of one every ten seconds, your interpreter is using the incorrect timing
rate caused by an old bug in ZIP. If an entire line of ten asterisks appears
all at once every ten seconds, your interpreter is not properly flushing its
buffer.

"
 1dbd:  90 01 82 58             JZ              #01 [TRUE] 2017
 1dc1:  b2 ...                  PRINT           "Hit "." to return to the main
menu, or any other key to begin the test. Hit any key to stop the test while it
is running.

"
 1e1c:  b2 ...                  PRINT           "TimedKey> "
 1e27:  88 0c c3 02             CALL_1S         330c -> L01
 1e2b:  41 02 2e 43             JE              L01,#2e [FALSE] 1e30
 1e2f:  b0                      RTRUE           
 1e30:  bb                      NEW_LINE        
 1e31:  0d 12 00                STORE           G02,#00
 1e34:  cd 4f 11 ff a3          STORE           G01,#ffa3
 1e39:  f6 53 01 0a 08 06 02    READ_CHAR       #01,#0a,2018 -> L01
 1e40:  bb                      NEW_LINE        
 1e41:  c1 8f 11 ff a3 01 11    JE              G01,#ffa3 [FALSE] 1f57
 1e48:  b2 ...                  PRINT           "The timing interrupt function
was not called at all. Either your interpreter does not support timed input, or
you terminated the test before one second elapsed. (Or your interpreter has the
"slow" bug and you terminated the test before ten seconds elapsed.)

"
 1eff:  a0 01 00 2d             JZ              L00 [FALSE] 1f2e
 1f03:  b2 ...                  PRINT           "Your interpreter claims to not
support timed input. "
 1f28:  8d 0d ce                PRINT_PADDR     S001
 1f2b:  8c 00 28                JUMP            1f54
 1f2e:  b2 ...                  PRINT           "Your interpreter claims to
support timed input. "
 1f51:  8d 0d da                PRINT_PADDR     S002
 1f54:  8c 00 be                JUMP            2013
 1f57:  a0 11 00 84             JZ              G01 [FALSE] 1fdd
 1f5b:  b2 ...                  PRINT           "Your interpreter calls the
timing interrupt function with no arguments. "
 1f8e:  a0 01 00 47             JZ              L00 [FALSE] 1fd7
 1f92:  b2 ...                  PRINT           "This is correct, except that
your interpreter claims not to support timed input at all. "
 1fd1:  8d 0d da                PRINT_PADDR     S002
 1fd4:  8c 00 05                JUMP            1fda
 1fd7:  8d 0d ce                PRINT_PADDR     S001
 1fda:  8c 00 38                JUMP            2013
 1fdd:  b2 ...                  PRINT           "Your interpreter calls the
timing interrupt function with an argument. "
 2010:  8d 0d da                PRINT_PADDR     S002
 2013:  bb                      NEW_LINE        
 2014:  8c fd a8                JUMP            1dbd
 2017:  b0                      RTRUE           

Routine 2018, 1 local

 2019:  2d 11 01                STORE           G01,L00
 201c:  b2 ...                  PRINT           "* "
 2021:  95 12                   INC             G02
 2023:  41 12 0a 46             JE              G02,#0a [FALSE] 202b
 2027:  bb                      NEW_LINE        
 2028:  0d 12 00                STORE           G02,#00
 202b:  b1                      RFALSE          

Routine 202c, 3 locals

 202d:  10 00 01 03             LOADB           #00,#01 -> L02
 2031:  49 03 80 00             AND             L02,#80 -> -(SP)
 2035:  a0 00 80 45             JZ              (SP)+ [TRUE] 207c
 2039:  0d 01 01                STORE           L00,#01
 203c:  b2 ...                  PRINT           "Your interpreter claims (by
its header bit) that it DOES support timed input.

"
 2079:  8c 00 46                JUMP            20c0
 207c:  0d 01 00                STORE           L00,#00
 207f:  b2 ...                  PRINT           "Your interpreter claims (by
its header bit) that it DOES NOT support timed input.

"
 20c0:  b2 ...                  PRINT           "When you begin this test, you
should be able to enter a line of input in the usual fashion. Every three
seconds, a line of text will appear. (If the lines appear at the rate of one
every thirty seconds, your interpreter is using the incorrect timing rate
caused by an old bug in ZIP.)

"
 218b:  b2 ...                  PRINT           "Interrupts actually are
occuring once per second; every third interrupt prints a line of text, and the
other two have no visible effect. After each line, your input should be redrawn
so that you can continue typing and editing it.

"
 222e:  b2 ...                  PRINT           "Hit "." to return to the main
menu, or any other key to begin the test. Type "." on a line by itself to stop
the test.

"
 2289:  b2 ...                  PRINT           "TimedString> "
 2296:  88 0c c3 03             CALL_1S         330c -> L02
 229a:  41 03 2e 43             JE              L02,#2e [FALSE] 229f
 229e:  b0                      RTRUE           
 229f:  bb                      NEW_LINE        
 22a0:  b2 ...                  PRINT           "Beginning test...

"
 22b3:  cd 4f 11 ff a3          STORE           G01,#ffa3
 22b8:  0d 12 00                STORE           G02,#00
 22bb:  90 01 80 bd             JZ              #01 [TRUE] 237a
 22bf:  b2 ...                  PRINT           "TimedString> "
 22cc:  d5 1f 00 50 03 00       SUB             #0050,#03 -> -(SP)
 22d2:  e2 1b 05 9a 00 00       STOREB          #059a,#00,(SP)+
 22d8:  e2 17 05 9a 01 00       STOREB          #059a,#01,#00
 22de:  cd 4f 02 05 9a          STORE           L01,#059a
 22e3:  0d 03 00                STORE           L02,#00
 22e6:  e4 94 02 00 0a 09 57 03 READ            L01,#00,#0a,255c -> L02
 22ee:  bb                      NEW_LINE        
 22ef:  d0 1f 05 9a 01 00       LOADB           #059a,#01 -> -(SP)
 22f5:  a0 00 00 36             JZ              (SP)+ [FALSE] 232d
 22f9:  b2 ...                  PRINT           "You just typed a blank line.
(Type "." to stop this test.)

"
 232a:  8c 00 35                JUMP            2360
 232d:  b2 ...                  PRINT           "You just typed ""
 233a:  0d 03 00                STORE           L02,#00
 233d:  d0 1f 05 9a 01 00       LOADB           #059a,#01 -> -(SP)
 2343:  62 03 00 54             JL              L02,(SP)+ [FALSE] 2359
 2347:  34 02 03 00             ADD             #02,L02 -> -(SP)
 234b:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 2351:  e5 bf 00                PRINT_CHAR      (SP)+
 2354:  95 03                   INC             L02
 2356:  8c ff e6                JUMP            233d
 2359:  b2 ...                  PRINT           "".

"
 2360:  d0 1f 05 9a 01 00       LOADB           #059a,#01 -> -(SP)
 2366:  41 00 01 4f             JE              (SP)+,#01 [FALSE] 2377
 236a:  d0 1f 05 9a 02 00       LOADB           #059a,#02 -> -(SP)
 2370:  41 00 2e 45             JE              (SP)+,#2e [FALSE] 2377
 2374:  8c 00 05                JUMP            237a
 2377:  8c ff 43                JUMP            22bb
 237a:  b2 ...                  PRINT           "Test terminated.
"
 2389:  c1 8f 11 ff a3 01 11    JE              G01,#ffa3 [FALSE] 249f
 2390:  b2 ...                  PRINT           "The timing interrupt function
was not called at all. Either your interpreter does not support timed input, or
you terminated the test before one second elapsed. (Or your interpreter has the
"slow" bug and you terminated the test before ten seconds elapsed.)

"
 2447:  a0 01 00 2d             JZ              L00 [FALSE] 2476
 244b:  b2 ...                  PRINT           "Your interpreter claims to not
support timed input. "
 2470:  8d 0d ce                PRINT_PADDR     S001
 2473:  8c 00 28                JUMP            249c
 2476:  b2 ...                  PRINT           "Your interpreter claims to
support timed input. "
 2499:  8d 0d da                PRINT_PADDR     S002
 249c:  8c 00 be                JUMP            255b
 249f:  a0 11 00 84             JZ              G01 [FALSE] 2525
 24a3:  b2 ...                  PRINT           "Your interpreter calls the
timing interrupt function with no arguments. "
 24d6:  a0 01 00 47             JZ              L00 [FALSE] 251f
 24da:  b2 ...                  PRINT           "This is correct, except that
your interpreter claims not to support timed input at all. "
 2519:  8d 0d da                PRINT_PADDR     S002
 251c:  8c 00 05                JUMP            2522
 251f:  8d 0d ce                PRINT_PADDR     S001
 2522:  8c 00 38                JUMP            255b
 2525:  b2 ...                  PRINT           "Your interpreter calls the
timing interrupt function with an argument. "
 2558:  8d 0d da                PRINT_PADDR     S002
 255b:  b0                      RTRUE           

Routine 255c, 1 local

 255d:  2d 11 01                STORE           G01,L00
 2560:  95 12                   INC             G02
 2562:  41 12 03 00 2e          JE              G02,#03 [FALSE] 2593
 2567:  0d 12 00                STORE           G02,#00
 256a:  b2 ...                  PRINT           "
[Every three seconds....]
TimedString> "
 2593:  b1                      RFALSE          

Routine 2594, 2 locals

 2595:  b2 ...                  PRINT           "This tests whether your
interpreter supports being handed input by the game file. (For example, after a
function key is hit in Beyond Zork, the command prompt appears with text
already in place -- whatever text you had typed before you interrupted it with
the function key.)

"
 2658:  b2 ...                  PRINT           "The command prompt below
should appear with the word "Given" already visible after it. You should be
able to type more characters, or go back and edit the given character as if you
had typed them yourself.

"
 26eb:  b2 ...                  PRINT           "If you see the word "Given"
twice, your interpreter is printing the given characters, which it shouldn't
(that's the responsibility of the game file.)

"
 275a:  b2 ...                  PRINT           "Preload> Given"
 2769:  d5 1f 00 50 03 00       SUB             #0050,#03 -> -(SP)
 276f:  e2 1b 05 9a 00 00       STOREB          #059a,#00,(SP)+
 2775:  e2 17 05 9a 01 05       STOREB          #059a,#01,#05
 277b:  e2 17 05 9a 02 47       STOREB          #059a,#02,#47
 2781:  e2 17 05 9a 03 69       STOREB          #059a,#03,#69
 2787:  e2 17 05 9a 04 76       STOREB          #059a,#04,#76
 278d:  e2 17 05 9a 05 65       STOREB          #059a,#05,#65
 2793:  e2 17 05 9a 06 6e       STOREB          #059a,#06,#6e
 2799:  cd 4f 02 05 9a          STORE           L01,#059a
 279e:  0d 01 00                STORE           L00,#00
 27a1:  e4 bf 02 01             READ            L01 -> L00
 27a5:  d0 1f 05 9a 01 00       LOADB           #059a,#01 -> -(SP)
 27ab:  a0 00 5c                JZ              (SP)+ [FALSE] 27c8
 27ae:  b2 ...                  PRINT           "You just typed a blank line.
"
 27c5:  8c 00 33                JUMP            27f9
 27c8:  b2 ...                  PRINT           "You just typed ""
 27d5:  0d 01 00                STORE           L00,#00
 27d8:  d0 1f 05 9a 01 00       LOADB           #059a,#01 -> -(SP)
 27de:  62 01 00 54             JL              L00,(SP)+ [FALSE] 27f4
 27e2:  34 02 01 00             ADD             #02,L00 -> -(SP)
 27e6:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 27ec:  e5 bf 00                PRINT_CHAR      (SP)+
 27ef:  95 01                   INC             L00
 27f1:  8c ff e6                JUMP            27d8
 27f4:  b2 ...                  PRINT           "".
"
 27f9:  b0                      RTRUE           

Routine 27fc, 4 locals

 27fd:  b2 ...                  PRINT           "This tests the interpreter's
ability to do single and multiple "undo" commands.

"
 283a:  10 10 01 02             LOADB           #10,#01 -> L01
 283e:  49 02 10 00             AND             L01,#10 -> -(SP)
 2842:  a0 00 c8                JZ              (SP)+ [TRUE] 284b
 2845:  0d 01 01                STORE           L00,#01
 2848:  8c 00 05                JUMP            284e
 284b:  0d 01 00                STORE           L00,#00
 284e:  a0 01 80 3e             JZ              L00 [TRUE] 288e
 2852:  b2 ...                  PRINT           "Your interpreter claims (by
its header bit) that it DOES support undo.

"
 288b:  8c 00 3f                JUMP            28cb
 288e:  b2 ...                  PRINT           "Your interpreter claims (by
its header bit) that it DOES NOT support undo.

"
 28cb:  0d 03 01                STORE           L02,#01
 28ce:  0d 04 00                STORE           L03,#00
 28d1:  b2 ...                  PRINT           "Simulating first move...
"
 28e6:  be 09 ff 02             SAVE_UNDO       -> L01
 28ea:  2d ff 02                STORE           Gef,L01
 28ed:  c1 8f ff ff ff 00 40    JE              Gef,#ffff [FALSE] 2932
 28f4:  b2 ...                  PRINT           "Save failed -- interpreter
claims that it does not support "undo".
"
 2927:  0d 03 00                STORE           L02,#00
 292a:  cd 4f 04 ff ff          STORE           L03,#ffff
 292f:  8c 00 8c                JUMP            29bc
 2932:  41 ff 00 58             JE              Gef,#00 [FALSE] 294c
 2936:  b2 ...                  PRINT           "Save failed.
"
 2943:  0d 03 00                STORE           L02,#00
 2946:  0d 04 00                STORE           L03,#00
 2949:  8c 00 72                JUMP            29bc
 294c:  41 ff 01 54             JE              Gef,#01 [FALSE] 2962
 2950:  b2 ...                  PRINT           "Save succeeded.
"
 295f:  8c 00 5c                JUMP            29bc
 2962:  41 ff 02 00 28          JE              Gef,#02 [FALSE] 298d
 2967:  b2 ...                  PRINT           "Undo succeeded (undid first
move).
"
 2984:  0d 03 00                STORE           L02,#00
 2987:  0d 04 02                STORE           L03,#02
 298a:  8c 00 31                JUMP            29bc
 298d:  b2 ...                  PRINT           "Save gave unknown result code
"
 29a4:  e6 bf 02                PRINT_NUM       L01
 29a7:  b2 ...                  PRINT           " -- ERROR.
"
 29b6:  0d 03 00                STORE           L02,#00
 29b9:  0d 04 00                STORE           L03,#00
 29bc:  a0 03 82 3a             JZ              L02 [TRUE] 2bf8
 29c0:  b2 ...                  PRINT           "
Simulating second move...
"
 29d7:  be 09 ff 02             SAVE_UNDO       -> L01
 29db:  2d ff 02                STORE           Gef,L01
 29de:  c1 8f ff ff ff 00 40    JE              Gef,#ffff [FALSE] 2a23
 29e5:  b2 ...                  PRINT           "Save failed -- interpreter
claims that it does not support "undo".
"
 2a18:  0d 03 00                STORE           L02,#00
 2a1b:  cd 4f 04 ff ff          STORE           L03,#ffff
 2a20:  8c 01 d7                JUMP            2bf8
 2a23:  41 ff 00 58             JE              Gef,#00 [FALSE] 2a3d
 2a27:  b2 ...                  PRINT           "Save failed.
"
 2a34:  0d 03 00                STORE           L02,#00
 2a37:  0d 04 00                STORE           L03,#00
 2a3a:  8c 01 bd                JUMP            2bf8
 2a3d:  41 ff 01 54             JE              Gef,#01 [FALSE] 2a53
 2a41:  b2 ...                  PRINT           "Save succeeded.
"
 2a50:  8c 01 a7                JUMP            2bf8
 2a53:  41 ff 02 01 73          JE              Gef,#02 [FALSE] 2bc9
 2a58:  b2 ...                  PRINT           "Undo succeeded (undid second
move).
"
 2a75:  b2 ...                  PRINT           "
Hit "." to abort this test, or any other key to try a second "undo". (In many
interpreters, executing the second "undo" will return to exactly the same point
as the first one. If this occurs, and you see this message a second time (or
more), your interpreter only supports single-move undo.)
"
 2b4a:  b2 ...                  PRINT           "MultipleUndo> "
 2b59:  88 0c c3 02             CALL_1S         330c -> L01
 2b5d:  bb                      NEW_LINE        
 2b5e:  41 02 2e 4b             JE              L01,#2e [FALSE] 2b6b
 2b62:  0d 03 00                STORE           L02,#00
 2b65:  0d 04 01                STORE           L03,#01
 2b68:  8c 00 8f                JUMP            2bf8
 2b6b:  b2 ...                  PRINT           "
Second undo...
"
 2b7c:  be 0a ff 02             RESTORE_UNDO    -> L01
 2b80:  2d ff 02                STORE           Gef,L01
 2b83:  41 ff 00 52             JE              Gef,#00 [FALSE] 2b97
 2b87:  b2 ...                  PRINT           "Undo failed.
"
 2b94:  8c 00 2b                JUMP            2bc0
 2b97:  b2 ...                  PRINT           "Undo gave unknown result code
"
 2bae:  e6 bf 02                PRINT_NUM       L01
 2bb1:  b2 ...                  PRINT           " -- ERROR.
"
 2bc0:  0d 04 00                STORE           L03,#00
 2bc3:  0d 03 00                STORE           L02,#00
 2bc6:  8c 00 31                JUMP            2bf8
 2bc9:  b2 ...                  PRINT           "Save gave unknown result code
"
 2be0:  e6 bf 02                PRINT_NUM       L01
 2be3:  b2 ...                  PRINT           " -- ERROR.
"
 2bf2:  0d 03 00                STORE           L02,#00
 2bf5:  0d 04 00                STORE           L03,#00
 2bf8:  a0 03 80 b3             JZ              L02 [TRUE] 2cad
 2bfc:  b2 ...                  PRINT           "
Hit "." to abort this test, or any other key to try "undo".
"
 2c2d:  b2 ...                  PRINT           "SingleUndo> "
 2c3a:  88 0c c3 02             CALL_1S         330c -> L01
 2c3e:  bb                      NEW_LINE        
 2c3f:  41 02 2e 4d             JE              L01,#2e [FALSE] 2c4e
 2c43:  0d 03 00                STORE           L02,#00
 2c46:  cd 4f 04 ff fe          STORE           L03,#fffe
 2c4b:  8c 00 61                JUMP            2cad
 2c4e:  b2 ...                  PRINT           "
First undo...
"
 2c5d:  be 0a ff 02             RESTORE_UNDO    -> L01
 2c61:  2d ff 02                STORE           Gef,L01
 2c64:  41 ff 00 58             JE              Gef,#00 [FALSE] 2c7e
 2c68:  b2 ...                  PRINT           "Undo failed.
"
 2c75:  0d 03 00                STORE           L02,#00
 2c78:  0d 04 00                STORE           L03,#00
 2c7b:  8c 00 31                JUMP            2cad
 2c7e:  b2 ...                  PRINT           "Undo gave unknown result code
"
 2c95:  e6 bf 02                PRINT_NUM       L01
 2c98:  b2 ...                  PRINT           " -- ERROR.
"
 2ca7:  0d 03 00                STORE           L02,#00
 2caa:  0d 04 00                STORE           L03,#00
 2cad:  bb                      NEW_LINE        
 2cae:  2d ff 04                STORE           Gef,L03
 2cb1:  c1 8f ff ff fe 54       JE              Gef,#fffe [FALSE] 2cc9
 2cb7:  b2 ...                  PRINT           "Test cancelled.
"
 2cc6:  8c 02 a9                JUMP            2f70
 2cc9:  c1 8f ff ff ff 00 ca    JE              Gef,#ffff [FALSE] 2d98
 2cd0:  a0 01 80 6f             JZ              L00 [TRUE] 2d41
 2cd4:  b2 ...                  PRINT           "Your interpreter claims to
support "undo", but the @save_undo opcode returned -1, indicating that the
interpreter does not support "undo". "
 2d3b:  8d 0d da                PRINT_PADDR     S002
 2d3e:  8c 00 56                JUMP            2d95
 2d41:  b2 ...                  PRINT           "Your interpreter claims to not
support "undo", and the @save_undo opcode returned -1, corroborating this. "
 2d92:  8d 0d ce                PRINT_PADDR     S001
 2d95:  8c 01 da                JUMP            2f70
 2d98:  41 ff 00 00 b2          JE              Gef,#00 [FALSE] 2e4d
 2d9d:  a0 01 80 37             JZ              L00 [TRUE] 2dd6
 2da1:  b2 ...                  PRINT           "Your interpreter claims to
support "undo", but it didn't work. "
 2dd0:  8d 0d da                PRINT_PADDR     S002
 2dd3:  8c 00 76                JUMP            2e4a
 2dd6:  b2 ...                  PRINT           "Your interpreter claims to not
support "undo", and in fact "undo" failed. However, it did not return -1 from
the @save_undo opcode, which it should. "
 2e47:  8d 0d da                PRINT_PADDR     S002
 2e4a:  8c 01 25                JUMP            2f70
 2e4d:  41 ff 01 00 74          JE              Gef,#01 [FALSE] 2ec4
 2e52:  a0 01 80 33             JZ              L00 [TRUE] 2e87
 2e56:  b2 ...                  PRINT           "Your interpreter claims to
support "undo", and it does. "
 2e81:  8d 0d ce                PRINT_PADDR     S001
 2e84:  8c 00 3c                JUMP            2ec1
 2e87:  b2 ...                  PRINT           "Your interpreter claims to not
support "undo", but in fact it does anyway. "
 2ebe:  8d 0d da                PRINT_PADDR     S002
 2ec1:  8c 00 ae                JUMP            2f70
 2ec4:  41 ff 02 00 a9          JE              Gef,#02 [FALSE] 2f70
 2ec9:  a0 01 80 4f             JZ              L00 [TRUE] 2f1a
 2ecd:  b2 ...                  PRINT           "Your interpreter claims to
support "undo", and it does. In fact, it supports multiple "undo". "
 2f14:  8d 0d ce                PRINT_PADDR     S001
 2f17:  8c 00 58                JUMP            2f70
 2f1a:  b2 ...                  PRINT           "Your interpreter claims to not
support "undo", but in fact it does anyway. In fact, it supports multiple
"undo". "
 2f6d:  8d 0d da                PRINT_PADDR     S002
 2f70:  b0                      RTRUE           

Routine 2f74, 1 local

 2f75:  b2 ...                  PRINT           "This tests if you can read
text which is displayed immediately before the program quits. (It is not clear
whether this is covered by the Z-Spec. However, some games -- including some
original Infocom games -- display important closing text and then immediately
quit.)

"
 3036:  b2 ...                  PRINT           "Hit "." to return to the main
menu, or any other key to print a line of text and then quit. If the line of
text does not appear, or appears and vanishes too quickly to read, your
interpreter will have trouble with those games.

"
 30d7:  b2 ...                  PRINT           "ClosingText> "
 30e4:  88 0c c3 01             CALL_1S         330c -> L00
 30e8:  41 01 2e 52             JE              L00,#2e [FALSE] 30fc
 30ec:  b2 ...                  PRINT           "
Test aborted.
"
 30fb:  b0                      RTRUE           
 30fc:  b2 ...                  PRINT           "

This is a final line of text. Goodbye.
"
 311d:  ba                      QUIT            

Routine 3120, 0 locals

 3121:  bb                      NEW_LINE        
 3122:  8f 0c c5                CALL_1N         3314
 3125:  bb                      NEW_LINE        
 3126:  8f 0c 4d                CALL_1N         3134
 3129:  b2 ...                  PRINT           "Goodbye.
"
 3132:  ba                      QUIT            

Routine 3134, 7 locals

 3135:  cf 1f 05 60 00 00       LOADW           #0560,#00 -> -(SP)
 313b:  57 00 02 03             DIV             (SP)+,#02 -> L02
 313f:  0d 01 01                STORE           L00,#01
 3142:  90 01 81 c4             JZ              #01 [TRUE] 3308
 3146:  a0 01 80 76             JZ              L00 [TRUE] 31be
 314a:  b2 ...                  PRINT           "Options: (hit Enter by itself
to display this menu)
"
 3173:  b2 ...                  PRINT           "  . (period): Exit TerpEtude
"
 318e:  0d 04 00                STORE           L03,#00
 3191:  62 04 03 00 27          JL              L03,L02 [FALSE] 31bb
 3196:  b2 ...                  PRINT           "  "
 3199:  54 04 01 00             ADD             L03,#01 -> -(SP)
 319d:  e6 bf 00                PRINT_NUM       (SP)+
 31a0:  b2 ...                  PRINT           ": "
 31a3:  56 04 02 00             MUL             L03,#02 -> -(SP)
 31a7:  54 00 01 00             ADD             (SP)+,#01 -> -(SP)
 31ab:  cf 2f 05 60 00 00       LOADW           #0560,(SP)+ -> -(SP)
 31b1:  ad 00                   PRINT_PADDR     (SP)+
 31b3:  b2 ...                  PRINT           "
"
 31b6:  95 04                   INC             L03
 31b8:  8c ff d8                JUMP            3191
 31bb:  0d 01 00                STORE           L00,#00
 31be:  b2 ...                  PRINT           "
> "
 31c5:  e2 17 05 9a 00 4d       STOREB          #059a,#00,#4d
 31cb:  e2 17 05 9a 01 00       STOREB          #059a,#01,#00
 31d1:  cd 4f 02 05 9a          STORE           L01,#059a
 31d6:  0d 04 00                STORE           L03,#00
 31d9:  e4 bf 02 04             READ            L01 -> L03
 31dd:  bb                      NEW_LINE        
 31de:  d0 1f 05 9a 01 06       LOADB           #059a,#01 -> L05
 31e4:  0d 05 00                STORE           L04,#00
 31e7:  62 05 06 55             JL              L04,L05 [FALSE] 31fe
 31eb:  34 02 05 00             ADD             #02,L04 -> -(SP)
 31ef:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 31f5:  41 00 20 47             JE              (SP)+,#20 [FALSE] 31fe
 31f9:  95 05                   INC             L04
 31fb:  8c ff eb                JUMP            31e7
 31fe:  62 05 06 53             JL              L04,L05 [FALSE] 3213
 3202:  34 02 05 00             ADD             #02,L04 -> -(SP)
 3206:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 320c:  41 00 2e 45             JE              (SP)+,#2e [FALSE] 3213
 3210:  8c 00 f7                JUMP            3308
 3213:  61 05 06 80 1e          JE              L04,L05 [TRUE] 3234
 3218:  34 02 05 00             ADD             #02,L04 -> -(SP)
 321c:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 3222:  42 00 30 d0             JL              (SP)+,#30 [TRUE] 3234
 3226:  34 02 05 00             ADD             #02,L04 -> -(SP)
 322a:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 3230:  43 00 39 48             JG              (SP)+,#39 [FALSE] 323a
 3234:  0d 01 01                STORE           L00,#01
 3237:  8c ff 0a                JUMP            3142
 323a:  0d 07 00                STORE           L06,#00
 323d:  62 05 06 00 3a          JL              L04,L05 [FALSE] 327a
 3242:  34 02 05 00             ADD             #02,L04 -> -(SP)
 3246:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 324c:  42 00 30 80 2b          JL              (SP)+,#30 [TRUE] 327a
 3251:  34 02 05 00             ADD             #02,L04 -> -(SP)
 3255:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 325b:  43 00 39 dd             JG              (SP)+,#39 [TRUE] 327a
 325f:  34 02 05 00             ADD             #02,L04 -> -(SP)
 3263:  d0 2f 05 9a 00 00       LOADB           #059a,(SP)+ -> -(SP)
 3269:  55 00 30 00             SUB             (SP)+,#30 -> -(SP)
 326d:  56 07 0a 00             MUL             L06,#0a -> -(SP)
 3271:  74 00 00 07             ADD             (SP)+,(SP)+ -> L06
 3275:  95 05                   INC             L04
 3277:  8c ff c5                JUMP            323d
 327a:  42 07 01 c7             JL              L06,#01 [TRUE] 3283
 327e:  63 07 03 00 56          JG              L06,L02 [FALSE] 32d7
 3283:  b2 ...                  PRINT           "Please enter a value from 1 to
"
 329a:  e6 bf 03                PRINT_NUM       L02
 329d:  b2 ...                  PRINT           ", or "." to exit, or hit Enter
by itself to display the menu of options.
"
 32d4:  8c fe 6d                JUMP            3142
 32d7:  56 07 02 00             MUL             L06,#02 -> -(SP)
 32db:  cf 2f 05 60 00 04       LOADW           #0560,(SP)+ -> L03
 32e1:  a0 04 00 20             JZ              L03 [FALSE] 3303
 32e5:  b2 ...                  PRINT           "That option is not yet
implemented.
"
 3300:  8c fe 41                JUMP            3142
 3303:  af 04                   CALL_1N         L03
 3305:  8c fe 3c                JUMP            3142
 3308:  b0                      RTRUE           

Routine 330c, 1 local

 330d:  f6 7f 01 01             READ_CHAR       #01 -> L00
 3311:  ab 01                   RET             L00

Routine 3314, 0 locals

 3315:  b2 ...                  PRINT           "TerpEtude: A Z-machine
Interpreter Exerciser
"
 333a:  b2 ...                  PRINT           "By Andrew Plotkin
(erkyrath@netcom.com)
"
 335d:  b2 ...                  PRINT           "Release "
 3364:  0f 00 01 00             LOADW           #00,#01 -> -(SP)
 3368:  c9 8f 00 03 ff 00       AND             (SP)+,#03ff -> -(SP)
 336e:  e6 bf 00                PRINT_NUM       (SP)+
 3371:  b2 ...                  PRINT           " / built with Inform v"
 3382:  10 00 3c ff             LOADB           #00,#3c -> Gef
 3386:  e5 bf ff                PRINT_CHAR      Gef
 3389:  10 00 3d ff             LOADB           #00,#3d -> Gef
 338d:  e5 bf ff                PRINT_CHAR      Gef
 3390:  10 00 3e ff             LOADB           #00,#3e -> Gef
 3394:  e5 bf ff                PRINT_CHAR      Gef
 3397:  10 00 3f ff             LOADB           #00,#3f -> Gef
 339b:  e5 bf ff                PRINT_CHAR      Gef
 339e:  bb                      NEW_LINE        
 339f:  b2 ...                  PRINT           "Tests compliance with
Z-Machine Standards Document 0.99.
"
 33ce:  bb                      NEW_LINE        
 33cf:  b2 ...                  PRINT           "NOTE: This program does not
test everything in the Z-Spec. Passing all the tests in this program does NOT
guarantee that your interpreter is Z-Spec-compliant.

"
 344a:  b2 ...                  PRINT           "For that matter, this program
may have mistakes in it. I don't think it does, but you should not assume it is
the Fount of All Z-Machineness. If you find something strange, check the
Z-Spec, check existing interpreters, check Infocom's interpreters, and then
send me mail if you're still confused.
"
 3523:  b0                      RTRUE           

Routine 3524, 0 locals

 3525:  b2 ...                  PRINT           "In the beginning, TerpEtude
was written. That was release DRAFT-1.

"
 355e:  b2 ...                  PRINT           "   Release 2:
Accented-out test: Added ability to display characters in bold, underline, and
fixed-width styles.
"
 35b3:  b2 ...                  PRINT           "Accented-out test: Noted that
>> and << are, in fact, tested correctly.
"
 35f2:  b2 ...                  PRINT           "Given-text test: It's the game
file's job to print the given text before it calls @read. Fixed test to do
this.
"
 3647:  b2 ...                  PRINT           "Timed-string test: Changed
test to do both "invisible" and "visible" interrupts (only one interrupt in
three actually prints text.)
"
 36a8:  b2 ...                  PRINT           "
   Upcoming Test Features:
"
 36c1:  b2 ...                  PRINT           "List of terminating characters
Fonts
Stream 3 nesting
"
 36ec:  b2 ...                  PRINT           "
   Credits:
"
 36f9:  b2 ...                  PRINT           "Title: Jon Ferro
"
 370a:  b2 ...                  PRINT           "Spec Aid: Graham, SJ, PDD, and
the rest of the crowd
"
 3737:  b0                      RTRUE           

[End of code at 3738]

[Start of text at 3738]

 3738: S001 "This aspect of your interpreter appears to behave according to
spec.
"
 3768: S002 "This aspect of your interpreter appears to behave WRONG.
"
 3794: S003 ""
 3798: S004 ""
 379c: S005 "Black"
 37a0: S006 "Red"
 37a4: S007 "Green"
 37a8: S008 "Yellow"
 37b0: S009 "Blue"
 37b4: S010 "Magenta"
 37bc: S011 "Cyan"
 37c0: S012 "White"
 37c4: S013 "13 * 5"
 37cc: S014 "13 * -5"
 37d8: S015 "-13 * 5"
 37e4: S016 "-13 * -5"
 37f0: S017 "13 / 5"
 37f8: S018 "13 / -5"
 3800: S019 "-13 / 5"
 3808: S020 "-13 / -5"
 3814: S021 "13 % 5"
 381c: S022 "13 % -5"
 3828: S023 "-13 % 5"
 3834: S024 "-13 % -5"
 3840: S025 "a-umlaut:ae"
 384c: S026 "o-umlaut:oe"
 3858: S027 "u-umlaut:ue"
 3864: S028 "A-umlaut:Ae"
 3870: S029 "O-umlaut:Oe"
 387c: S030 "U-umlaut:Ue"
 3888: S031 "sz-ligature:ss"
 3894: S032 ">>-quotes:>>"
 38a4: S033 "<<-quotes:<<"
 38b4: S034 "e-umlaut:e"
 38c0: S035 "i-umlaut:i"
 38cc: S036 "y-umlaut:y"
 38d8: S037 "E-umlaut:E"
 38e4: S038 "I-umlaut:I"
 38f0: S039 "a-acute:a"
 38fc: S040 "e-acute:e"
 3908: S041 "i-acute:i"
 3914: S042 "o-acute:o"
 3920: S043 "u-acute:u"
 392c: S044 "y-acute:y"
 3938: S045 "A-acute:A"
 3944: S046 "E-acute:E"
 3950: S047 "I-acute:I"
 395c: S048 "O-acute:O"
 3968: S049 "U-acute:U"
 3974: S050 "Y-acute:Y"
 3980: S051 "a-grave:a"
 398c: S052 "e-grave:e"
 3998: S053 "i-grave:i"
 39a4: S054 "o-grave:o"
 39b0: S055 "u-grave:u"
 39bc: S056 "A-grave:A"
 39c8: S057 "E-grave:E"
 39d4: S058 "I-grave:I"
 39e0: S059 "O-grave:O"
 39ec: S060 "U-grave:U"
 39f8: S061 "a-circumflex:a"
 3a08: S062 "e-circumflex:e"
 3a18: S063 "i-circumflex:i"
 3a28: S064 "o-circumflex:o"
 3a38: S065 "u-circumflex:u"
 3a48: S066 "A-circumflex:A"
 3a58: S067 "E-circumflex:E"
 3a68: S068 "I-circumflex:I"
 3a78: S069 "O-circumflex:O"
 3a88: S070 "U-circumflex:U"
 3a98: S071 "a-ring:a"
 3aa4: S072 "A-ring:A"
 3ab0: S073 "o-slash:o"
 3abc: S074 "O-slash:O"
 3ac8: S075 "a-tilde:a"
 3ad4: S076 "n-tilde:n"
 3ae0: S077 "o-tilde:o"
 3aec: S078 "A-tilde:A"
 3af8: S079 "N-tilde:N"
 3b04: S080 "O-tilde:O"
 3b10: S081 "ae-ligature:ae"
 3b1c: S082 "AE-ligature:AE"
 3b2c: S083 "c-cedilla:c"
 3b38: S084 "C-cedilla:C"
 3b44: S085 "thorn:th"
 3b4c: S086 "eth:th"
 3b54: S087 "Thorn:Th"
 3b5c: S088 "Eth:Th"
 3b64: S089 "pound-symbol:L"
 3b74: S090 "oe-ligature:oe"
 3b80: S091 "OE-ligature:OE"
 3b90: S092 "inverse-!:!"
 3b9c: S093 "inverse-?:?"
 3ba8: S094 "Version"
 3bb0: S095 "Recent changes to TerpEtude"
 3bc4: S096 "Header flags analysis"
 3bd4: S097 "Styled text"
 3bdc: S098 "Colored text"
 3be8: S099 "Multiplication, division, remainder"
 3c04: S100 "Accented character output"
 3c18: S101 "Single-key input"
 3c24: S102 "Full-line input"
 3c30: S103 "Timed single-key input"
 3c40: S104 "Timed full-line input"
 3c50: S105 "Pre-loading of input line"
 3c64: S106 "Undo capability"
 3c70: S107 "Printing before quitting"
 3c84: S108 "<unknown attribute>"
 3c98: S109 "<unknown attribute>"
 3cac: S110 "<unknown attribute>"
 3cc0: S111 "<unknown attribute>"
 3cd4: S112 "<unknown attribute>"
 3ce8: S113 "<unknown attribute>"
 3cfc: S114 "<unknown attribute>"
 3d10: S115 "<unknown attribute>"
 3d24: S116 "<unknown attribute>"
 3d38: S117 "<unknown attribute>"
 3d4c: S118 "<unknown attribute>"
 3d60: S119 "<unknown attribute>"
 3d74: S120 "<unknown attribute>"
 3d88: S121 "<unknown attribute>"
 3d9c: S122 "<unknown attribute>"
 3db0: S123 "<unknown attribute>"
 3dc4: S124 "<unknown attribute>"
 3dd8: S125 "<unknown attribute>"
 3dec: S126 "<unknown attribute>"
 3e00: S127 "<unknown attribute>"
 3e14: S128 "<unknown attribute>"
 3e28: S129 "<unknown attribute>"
 3e3c: S130 "<unknown attribute>"
 3e50: S131 "<unknown attribute>"
 3e64: S132 "<unknown attribute>"
 3e78: S133 "<unknown attribute>"
 3e8c: S134 "<unknown attribute>"
 3ea0: S135 "<unknown attribute>"
 3eb4: S136 "<unknown attribute>"
 3ec8: S137 "<unknown attribute>"
 3edc: S138 "<unknown attribute>"
 3ef0: S139 "<unknown attribute>"
 3f04: S140 "<unknown attribute>"
 3f18: S141 "<unknown attribute>"
 3f2c: S142 "<unknown attribute>"
 3f40: S143 "<unknown attribute>"
 3f54: S144 "<unknown attribute>"
 3f68: S145 "<unknown attribute>"
 3f7c: S146 "<unknown attribute>"
 3f90: S147 "<unknown attribute>"
 3fa4: S148 "<unknown attribute>"
 3fb8: S149 "<unknown attribute>"
 3fcc: S150 "<unknown attribute>"
 3fe0: S151 "<unknown attribute>"
 3ff4: S152 "<unknown attribute>"
 4008: S153 "<unknown attribute>"
 401c: S154 "<unknown attribute>"
 4030: S155 "<unknown attribute>"
 4044: S156 "name"
 4048: S157 "create"
 404c: S158 "recreate"
 4054: S159 "destroy"
 405c: S160 "remaining"
 4064: S161 "copy"
 4068: S162 "call"
 406c: S163 "print"
 4070: S164 "print_to_array"

[End of text at 407c]

[End of file]
